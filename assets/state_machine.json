{
  "StartAt": "TranscribeAudio",
  "States": {
    "TranscribeAudio": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:transcribe:startTranscriptionJob",
      "Parameters": {
        "TranscriptionJobName.$": "States.Format('TranscriptionJob-{}', $.detail.requestParameters.key)",
        "LanguageCode": "es-US",
        "MediaFormat": "mp3",
        "Media": {
          "MediaFileUri.$": "States.Format('s3://{}/{}', $.detail.requestParameters.bucketName, $.detail.requestParameters.key)"
        },
        "OutputBucketName": "translatorstack-audiobucket96beecba-j7bnanhdwcyu",
        "OutputKey.$": "States.Format('transcription_output/{}.json', $.detail.requestParameters.key)"
      },
      "Next": "WaitForTranscriptionResult",
      "ResultPath": "$.transcription_result",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "TranscribeFailed"
        }
      ]
    },
    "WaitForTranscriptionResult": {
      "Type": "Wait",
      "Seconds": 15,
      "Next": "GetTranscriptionResult"
    },
    "GetTranscriptionResult": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:s3:getObject",
      "Parameters": {
        "Bucket": "translatorstack-audiobucket96beecba-j7bnanhdwcyu",
        "Key.$": "States.Format('transcription_output/{}.json', $.detail.requestParameters.key)"
      },
      "Next": "ParseTranscription",
      "ResultPath": "$.transcription_text",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "GetTranscriptionFailed"
        }
      ]
    },
    "ParseTranscription": {
      "Type": "Pass",
      "Parameters": {
        "parsed_body.$": "States.StringToJson($.transcription_text.Body)",
        "filename.$": "$.detail.requestParameters.key"
      },
      "Next": "ExtractTextAndLanguage"
    },
    "ExtractTextAndLanguage": {
      "Type": "Pass",
      "Parameters": {
        "transcription.$": "$.parsed_body.results.transcripts[0].transcript",
        "language_code": "es-US",
        "filename.$": "$.filename"
      },
      "Next": "IsEnglish"
    },
    "IsEnglish": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.language_code",
          "StringEquals": "en-US",
          "Next": "EndState"
        }
      ],
      "Default": "TranslateText"
    },
    "TranslateText": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:translate:translateText",
      "Parameters": {
        "Text.$": "$.transcription",
        "SourceLanguageCode.$": "$.language_code",
        "TargetLanguageCode": "en"
      },
      "ResultPath": "$.translation_result",
      "Next": "GenerateAudio",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "TranslateFailed"
        }
      ]
    },
    "GenerateAudio": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:polly:startSpeechSynthesisTask",
      "Parameters": {
        "Text.$": "$.translation_result.TranslatedText",
        "OutputFormat": "mp3",
        "VoiceId": "Joanna",
        "OutputS3BucketName": "translatorstack-audiobucket96beecba-j7bnanhdwcyu",
        "OutputS3KeyPrefix.$": "States.Format('translations/{}', $.filename)"
      },
      "Next": "CheckPollyTask",
      "ResultPath": "$.polly_result",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "PollyFailed"
        }
      ]
    },
    "CheckPollyTask": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:polly:getSpeechSynthesisTask",
      "Parameters": {
        "TaskId.$": "$.polly_result.SynthesisTask.TaskId"
      },
      "Next": "CheckPollyTaskStatus",
      "ResultPath": "$.polly_task_status",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "PollyFailed"
        }
      ]
    },
    "CheckPollyTaskStatus": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.polly_task_status.SynthesisTask.TaskStatus",
          "StringEquals": "completed",
          "Next": "EndState"
        },
        {
          "Variable": "$.polly_task_status.SynthesisTask.TaskStatus",
          "StringEquals": "failed",
          "Next": "PollyFailed"
        }
      ],
      "Default": "WaitState"
    },
    "WaitState": {
      "Type": "Wait",
      "Seconds": 15,
      "Next": "CheckPollyTask"
    },
    "EndState": {
      "Type": "Succeed"
    },
    "TranscribeFailed": {
      "Type": "Fail",
      "Error": "TranscriptionError",
      "Cause": "Transcription failed"
    },
    "GetTranscriptionFailed": {
      "Type": "Fail",
      "Error": "GetTranscriptionError",
      "Cause": "Getting transcription result failed"
    },
    "TranslateFailed": {
      "Type": "Fail",
      "Error": "TranslationError",
      "Cause": "Translation failed"
    },
    "PollyFailed": {
      "Type": "Fail",
      "Error": "PollyError",
      "Cause": "Polly synthesis failed"
    }
  }
}
